#!/usr/bin/env python2

import Milter
import authres
import re
import sys

fromregex = re.compile("@(\S+)>")
class reject_unauth_milter(Milter.Base):
    def __init__(self):
        self.spf_fail = False
        self.dkim_domain = []
        self.from_domain = False

    @Milter.noreply
    def header(self, field, value):
        try:
            if field == "Authentication-Results" and value.startswith(self.getsymval("j") + ";"):
                ar = authres.AuthenticationResultsHeader.parse("Authentication-Results: " + value)
                for result in ar.results:
                    if result.method == "spf" and result.result == "fail":
                        self.spf_fail = True
                    elif result.method == "dkim" and result.result == "pass":
                        for property in result.properties:
                            if property.type == "header" and property.name == "d":
                                self.dkim_domain.append(property.value)
            elif field == "From":
                self.from_domain = fromregex.search(value).group(1)
        except:
            pass
        return Milter.CONTINUE

    def eoh(self):
        if self.from_domain in self.dkim_domain:
            return Milter.CONTINUE
        if self.spf_fail:
            self.setreply("550", "5.7.1", "Message unauthorized: SPF failure, no DKIM")
            return Milter.REJECT
        return Milter.CONTINUE

Milter.factory = reject_unauth_milter
Milter.runmilter("reject-unauth", sys.argv[1], 1)
